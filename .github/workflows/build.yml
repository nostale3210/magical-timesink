name: build-rootfs
on:
  pull_request:
  schedule:
    - cron: '0 10 * * *'
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and push rootfs
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    container:
      image: archlinux:latest
      options: --privileged
      volumes:
        - "/:/host"
    strategy:
      fail-fast: false
      matrix:
        image:
          - main
          - nvidia

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create virtual btrfs filesystem
        shell: bash
        run: |
          pacman -Sy --noconfirm btrfs-progs
          truncate --size=10G tmp.img
          mkfs.btrfs tmp.img
          mkdir tmp
          mount -t btrfs -o defaults,noatime ./tmp.img /var/tmp
          chmod 777 tmp

      - name: Build rootfs
        uses: Wandalen/wretry.action@v3.4.0
        with:
          attempt_limit: 3
          attempt_delay: 45000
          command: bash build-rootfs.sh ${{ matrix.image }}

      - name: Install github cli
        run: |
          pacman -S --noconfirm github-cli

      - name: Upload rootfs
        uses: Wandalen/wretry.action@v3.4.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          attempt_limit: 3
          attempt_delay: 15000
          command: |
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Pull request; Not uploading release"
            else
              if gh release list -R ${{ github.repository_owner }}/${{ github.event.repository.name }} | grep "timesink-${{ matrix.image }}"; then
                gh release view timesink-${{ matrix.image }} -R ${{ github.repository_owner }}/${{ github.event.repository.name }} --json assets -q .assets[].name | xargs --no-run-if-empty -L 1 gh release delete-asset timesink-${{ matrix.image }} -R ${{ github.repository_owner }}/${{ github.event.repository.name }}
                gh release upload timesink-${{ matrix.image }} $(cat file_name) -R ${{ github.repository_owner }}/${{ github.event.repository.name }} --clobber
                gh release upload timesink-${{ matrix.image }} database -R ${{ github.repository_owner }}/${{ github.event.repository.name }} --clobber
              else
                gh release create timesink-${{ matrix.image }} $(cat file_name) -t timesink-${{ matrix.image }} -R ${{ github.repository_owner }}/${{ github.event.repository.name }}
                gh release upload timesink-${{ matrix.image }} database -R ${{ github.repository_owner }}/${{ github.event.repository.name }} --clobber
              fi
            fi


