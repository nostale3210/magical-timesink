name: build-rootfs
on:
  pull_request:
  schedule:
    - cron: '0 8 * * *'
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and push rootfs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create virtual btrfs filesystem
        shell: bash
        run: |
          truncate --size=10G builder.img
          mkfs.btrfs builder.img
          mkdir builder
          sudo mount -t btrfs -o defaults,noatime ./builder.img ./builder
          sudo chmod 777 builder
          cp -r arkdep-build.d builder/

      - name: Build rootfs in container
        uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          options: -v ${{ github.workspace }}:/work
          shell: bash
          run: |
            cd /work/builder

            cat /etc/pacman.conf

            sed -i "s/Required DatabaseOptional/Never/g" /etc/pacman.conf
            sed -i '72 i [arkane]' /etc/pacman.conf
            sed -i '73 i Server = https://repo.arkanelinux.org/$repo/os/$arch' /etc/pacman.conf
            sed -i '74 i [arkane-cauldron] \n' /etc/pacman.conf
            sed -i '75 i Server = https://repo.arkanelinux.org/$repo/os/$arch' /etc/pacman.conf

            pacman-key --init
            pacman -Sy --noconfirm archlinux-keyring
            pacman -Syu --noconfirm
            pacman -S --noconfirm base base-devel btrfs-progs arch-install-scripts device-mapper arkane-keyring arkdep

            arkdep-build timesink
            cp target/*.zst ./timesink.tar.zst

